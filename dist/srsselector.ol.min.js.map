{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/srsselector.html","webpack:///./src/templates/options.html","webpack:///./src/impl/ol/js/srsselectorcontrol.js","webpack:///./src/facade/js/srsselectorcontrol.js","webpack:///./src/facade/js/srsselector.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SRSselectorControl","M","impl","Control","map","html","_this","this","getMapImpl","getInteractions","forEach","interaction","ol","DoubleClickZoom","dblClickInteraction_","_get","_getPrototypeOf","setActive","on","evt","customEvt","CustomEvent","detail","coordinate","bubbles","getContainer","dispatchEvent","removeEventListener","projections","srsselectorcontrol_classCallCheck","utils","isUndefined","SRSselectorImplControl","exception","srsselectorcontrol_possibleConstructorReturn","srsselectorcontrol_getPrototypeOf","filter","projection","includes","code","_this2","Promise","success","fail","template","compileSync","compiledOptions","options","vars","appendChild","querySelector","addEventListener","changeSRS","querySelectorAll","option","mapProjection","getProjection","setAttribute","srsselectorcontrol_get","control","e","epsg","target","units","selectedOptions","dataset","selectedProjection","concat","setProjection","SRSselector","srsselector_classCallCheck","srsselector_possibleConstructorReturn","srsselector_getPrototypeOf","map_","controls_","projections_","JSON","parse","collapsedClass_","position_","position","positionClass_","Plugin","control_","push","panel_","ui","Panel","collapsible","collapsedButtonClass","tooltip","className","addControls","addPanels","removeControls","_ref","aControl","window","plugin","M$plugin$SRSselector","M$control$SRSselectorControl","M$impl$control$SRSselectorControl"],"mappings":"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","file":"srsselector.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = \"<div id=\\\"div-contenedor\\\" class=\\\"m-control m-container m-srsselector\\\">\\n    <span>Sistemas de referencia:</span>\\n    <!-- SRS options -->\\n</div>\";","module.exports = \"<select name=\\\"srs\\\" id=\\\"m-srsselector-srs\\\" class=\\\"dropdown\\\">\\n    {{#if projections}}\\n        {{#each projections}}\\n            <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"{{this.units}}\\\" value=\\\"{{this.code}}\\\">{{this.title}}</option>\\n        {{/each}}\\n    {{else}}\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"d\\\" value=\\\"EPSG:4230\\\">ED50 (4230)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"d\\\" value=\\\"EPSG:4258\\\">ETRS89 (4258)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"d\\\" value=\\\"EPSG:4326\\\">WGS84 (4326)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"m\\\" value=\\\"EPSG:23028\\\">ETRS89/UTM zone 28N (23028)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"m\\\" value=\\\"EPSG:23029\\\">ETRS89/UTM zone 29N (23029)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"m\\\" value=\\\"EPSG:23030\\\">ETRS89/UTM zone 30N (23030)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"m\\\" value=\\\"EPSG:23031\\\">ETRS89/UTM zone 31N (23031)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"m\\\" value=\\\"EPSG:25828\\\">ETRS89/UTM zone 28N (25828)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"m\\\" value=\\\"EPSG:25829\\\">ETRS89/UTM zone 29N (25829)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"m\\\" value=\\\"EPSG:25830\\\">ETRS89/UTM zone 30N (25830)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"m\\\" value=\\\"EPSG:25831\\\">ETRS89/UTM zone 31N (25831)</option>\\n        <option class=\\\"m-xylocator-srs-option\\\" data-units=\\\"m\\\" value=\\\"EPSG:32628\\\">ETRS89/UTM zone 28N (32628)</option>\\n    {{/if}}\\n</select>\";","/**\n * @module M/impl/control/SRSselectorControl\n */\nexport default class SRSselectorControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    // obtengo la interacción por defecto del dblclick para manejarla\n    const olMap = map.getMapImpl();\n    olMap.getInteractions().forEach((interaction) => {\n      if (interaction instanceof ol.interaction.DoubleClickZoom) {\n        this.dblClickInteraction_ = interaction;\n      }\n    });\n\n    // super addTo - don't delete\n    super.addTo(map, html);\n  }\n\n  // Add your own functions\n  activateClick(map) {\n    // desactivo el zoom al dobleclick\n    this.dblClickInteraction_.setActive(false);\n\n    // añado un listener al evento dblclick\n    const olMap = map.getMapImpl();\n    olMap.on('dblclick', (evt) => {\n      // disparo un custom event con las coordenadas del dobleclick\n      const customEvt = new CustomEvent('mapclicked', {\n        detail: evt.coordinate,\n        bubbles: true,\n      });\n      map.getContainer().dispatchEvent(customEvt);\n    });\n  }\n\n  deactivateClick(map) {\n    // activo el zoom al dobleclick\n    this.dblClickInteraction_.setActive(true);\n\n    // elimino el listener del evento\n    map.getMapImpl().removeEventListener('dblclick');\n  }\n}\n","/**\n * @module M/control/SRSselectorControl\n */\n\nimport SRSselectorImplControl from 'impl/srsselectorcontrol';\nimport template from 'templates/srsselector';\nimport options from 'templates/options';\n\nexport default class SRSselectorControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(projections) {\n    // 1. checks if the implementation can create PluginControl\n    if (M.utils.isUndefined(SRSselectorImplControl)) {\n      M.exception('La implementación usada no puede crear controles SRSselectorControl');\n    }\n    // 2. implementation of this control\n    const impl = new SRSselectorImplControl();\n    super(impl, 'SRSselector');\n\n    // Checks if Mapea supports projections\n    this.projections = projections.filter((projection) => {\n      const supportedProjs = [\n        'EPSG:4230',\n        'EPSG:4258',\n        'EPSG:4326',\n        'EPSG:23028',\n        'EPSG:23029',\n        'EPSG:23030',\n        'EPSG:23031',\n        'EPSG:25828',\n        'EPSG:25829',\n        'EPSG:25830',\n        'EPSG:25831',\n        'EPSG:32628',\n      ];\n      return supportedProjs.includes(projection.code);\n    });\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template);\n      const compiledOptions =\n        M.template.compileSync(options, { vars: { projections: this.projections } });\n      html.appendChild(compiledOptions);\n      html.querySelector('select#m-srsselector-srs').addEventListener('change', evt => this.changeSRS(evt));\n      this.map = map;\n      compiledOptions.querySelectorAll('.m-xylocator-srs-option').forEach((option) => {\n        const mapProjection = map.getProjection().code;\n        if (option.value === mapProjection) {\n          option.setAttribute('selected', 'selected');\n        }\n      });\n      success(html);\n    });\n  }\n\n  /**\n   * This function is called on the control activation\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  activate() {\n    // calls super to manage de/activation\n    super.activate();\n  }\n  /**\n   * This function is called on the control deactivation\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  deactivate() {\n    // calls super to manage de/activation\n    super.deactivate();\n  }\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api stable\n   */\n  getActivationButton(html) {\n    return html.querySelector('.m-srsselector button');\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof SRSselectorControl;\n  }\n\n  /**\n   * @public\n   * @function\n   * @param {*} e\n   * @api\n   */\n  changeSRS(e) {\n    const epsg = e.target.value;\n    const units = e.target.selectedOptions[0].dataset.units;\n    const selectedProjection = `${epsg}*${units}`;\n    this.map.setProjection(selectedProjection);\n    // this.map.setBbox(this.map.getProjection().getExtent());\n  }\n}\n","/**\n * @module M/plugin/SRSselector\n */\nimport 'assets/css/srsselector';\nimport SRSselectorControl from './srsselectorcontrol';\n\nexport default class SRSselector extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Array of object\n     * @private\n     * @type {Array<Object>}\n     */\n    this.projections_ = options.projections;\n    if (typeof options.projections === 'string') {\n      try {\n        this.projections_ = JSON.parse(this.projections_);\n      } catch (e) {\n        this.projections_ = [];\n      }\n    }\n\n    /**\n     * String to css class\n     * @private\n     * @type {String}\n     */\n    this.collapsedClass_ = 'g-cartografia-flecha-izquierda';\n\n    /**\n     * Position of the Plugin\n     * Posible values: TR | TL | BL | BR\n     * @type {Enum}\n     */\n    this.position_ = options.position || 'TR';\n    if (!(this.position_ === 'TL' || this.position_ === 'BL')) {\n      this.positionClass_ = 'right';\n    }\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.control_ = new SRSselectorControl(this.projections_);\n    this.controls_.push(this.control_);\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelSRSselector', {\n      collapsible: true,\n      position: M.ui.position[this.position_],\n      collapsedButtonClass: 'g-cartografia-tamano',\n      tooltip: 'Selector de SRS',\n      className: `srsselector-panel ${this.positionClass_}`,\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.map_.removeControls([this.control_]);\n    [this.map_, this.control_, this.panel_] = [null, null, null];\n  }\n\n  /**\n   * This function return the control of plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getControls() {\n    const aControl = [];\n    aControl.push(this.controls_);\n    return aControl;\n  }\n\n  /**\n   * @getter\n   * @public\n   */\n  get name() {\n    return 'srsselector';\n  }\n}\n","import M$plugin$SRSselector from './/facade/js/srsselector';\nimport M$control$SRSselectorControl from './/facade/js/srsselectorcontrol';\nimport M$impl$control$SRSselectorControl from './/impl/ol/js/srsselectorcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.SRSselector = M$plugin$SRSselector;\nwindow.M.control.SRSselectorControl = M$control$SRSselectorControl;\nwindow.M.impl.control.SRSselectorControl = M$impl$control$SRSselectorControl;\n"],"sourceRoot":""}